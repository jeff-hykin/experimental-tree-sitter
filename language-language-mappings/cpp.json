{
	"simpleTerms": {
		"type_identifier": "type",
		"primitive_type": "type",
		"\"unsigned\"": "type",
		"\"signed\"": "type",
		"\"short\"": "type",
		"\"long\"": "type",
		"\"auto\"": "type",

		"\"extern\"": "storage_modifier",
		"\"static\"": "storage_modifier",
		"\"register\"": "storage_modifier",
		"\"friend\"": "storage_modifier",
		"\"inline\"": "storage_modifier",
		"\"explicit\"": "storage_modifier",
		"\"const\"": "storage_modifier",
		"\"constexpr\"": "storage_modifier",
		"\"volatile\"": "storage_modifier",
		"\"restrict\"": "storage_modifier",
		"\"_Atomic\"": "storage_modifier",
		"\"public\"": "storage_modifier",
		"\"private\"": "storage_modifier",
		"\"protected\"": "storage_modifier",
		"\"final\"": "storage_modifier",
		"\"override\"": "storage_modifier",
		"function_specifier": "storage_modifier",

		"namespace_identifier": "namespace",

		"number_literal": "number",

		"char_literal": "string",
		"string_literal": "string",
		"system_lib_string": "string",
		"raw_string_literal": "string",
		"escape_sequence": "string",
		// "preproc_include > string_literal > escape_sequence": "string",

		"null": "keyword_constant",
		"nullptr": "keyword_constant",
		"true": "keyword_constant",
		"false": "keyword_constant",

		"comment": "comment",

		"\"if\"": "keyword_control",
		"\"else\"": "keyword_control",
		"\"do\"": "keyword_control",
		"\"for\"": "keyword_control",
		"\"while\"": "keyword_control",
		"\"break\"": "keyword_control",
		"\"continue\"": "keyword_control",
		"\"return\"": "keyword_control",
		"\"switch\"": "keyword_control",
		"\"case\"": "keyword_control",
		"\"default\"": "keyword_control",
		"\"goto\"": "keyword_control",
		"\"struct\"": "keyword_control",
		"\"enum\"": "keyword_control",
		"\"union\"": "keyword_control",
		"\"typedef\"": "keyword_control",
		"\"class\"": "keyword_control",
		"\"using\"": "keyword_control",
		"\"namespace\"": "keyword_control",
		"\"template\"": "keyword_control",
		"\"typename\"": "keyword_control",
		"\"try\"": "keyword_control",
		"\"catch\"": "keyword_control",

		"\"sizeof\"": "keyword_operator",
		"\"new\"": "keyword_operator",
		"\"delete\"": "keyword_operator",
		"\".\"": "keyword_operator",
		"\"->\"": "keyword_operator",
		"\"*\"": "keyword_operator",
		"\"-\"": "keyword_operator",
		"\"+\"": "keyword_operator",
		"\"/\"": "keyword_operator",
		"\"%\"": "keyword_operator",
		"\"++\"": "keyword_operator",
		"\"--\"": "keyword_operator",
		"\"==\"": "keyword_operator",
		"\"!\"": "keyword_operator",
        "\"!=\"": "keyword_operator",
        "\"<\"": "keyword_operator",
		"\">\"": "keyword_operator",
		"\">=\"": "keyword_operator",
		"\"<=\"": "keyword_operator",
		"\"&&\"": "keyword_operator",
		"\"||\"": "keyword_operator",
		"\"&\"": "keyword_operator",
		"\"|\"": "keyword_operator",
		"\"^\"": "keyword_operator",
		"\"~\"": "keyword_operator",
		"\"<<\"": "keyword_operator",
		"\">>\"": "keyword_operator",
		"\"=\"": "keyword_operator",
		"\"+=\"": "keyword_operator",
		"\"-=\"": "keyword_operator",
		"\"*=\"": "keyword_operator",
		"\"/=\"": "keyword_operator",
		"\"%=\"": "keyword_operator",
		"\"<<=\"": "keyword_operator",
		"\">>=\"": "keyword_operator",
		"\"&=\"": "keyword_operator",
		"\"^=\"": "keyword_operator",
		"\"|=\"": "keyword_operator",
		"\"?\"": "keyword_operator",
		"\"::\"": "keyword_operator",
		// "relational_expression > \"<\"": "keyword_operator",
		// "relational_expression > \">\"": "keyword_operator",
		// "conditional_expression > \":\"": "keyword_operator",

		"\"#if\"": "keyword_directive",
		"\"#ifdef\"": "keyword_directive",
		"\"#ifndef\"": "keyword_directive",
		"\"#elif\"": "keyword_directive",
		"\"#else\"": "keyword_directive",
		"\"#endif\"": "keyword_directive",
		"\"#define\"": "keyword_directive",
		"\"#include\"": "keyword_directive",
		"preproc_directive": "keyword_directive",

		"\";\"": "punctuation",
		"\":\"": "punctuation",
		"\",\"": "punctuation",
		"\"[\"": "punctuation",
		"\"]\"": "punctuation",
		"\"{\"": "punctuation",
		"\"}\"": "punctuation",
		"\"(\"": "punctuation",
		"\")\"": "punctuation"
	},

	"complexTerms": ["identifier", "field_identifier"],

	"complexScopes": {
		"identifier": "variable",
		"field_identifier": "variable",

		"call_expression > identifier": "function",
		"call_expression > field_expression > field_identifier": "function",
		"call_expression > scoped_identifier > identifier": "function",
		"template_function > identifier": "function",
		"template_function > scoped_identifier > identifier": "function",
		"template_method > field_identifier": "function",
		"function_declarator > identifier": "function",
		"function_declarator > field_identifier": "function",
		"function_declarator > scoped_identifier > identifier": "function",
		"destructor_name > identifier": "function",
	},

}
